[tool.poetry]
name = "threedframe"
version = "0.0.0"
description = "Generate printable joints to create a real puzzle from any 3d model."
authors = ["Braden Mars <bradenmars@bradenmars.me>"]
license = "MIT license"
packages = [{ include = "threedframe", from = "." }]

readme = "README.md"
homepage = "https://github.com/BradenM/threedframe"
repository = "https://github.com/BradenM/threedframe"

keywords = []
classifiers = [
    'Natural Language :: English',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'License :: OSI Approved :: MIT License',
]

include = [
    "README.md", "LICENSE",
]

[tool.poetry.dependencies]
python = "^3.8"
# docs extras
sphinx = { version = "^3.4.3", optional = true }
sphinx-autodoc-typehints = { version = "^1.11.1", optional = true }
recommonmark = { version = "^0.7.1", optional = true }
sphinx_rtd_theme = { version = "^0.5.1", optional = true }
# main
rich = "^9.10.0"
solidpython = "^1.0.4"
numpy = "^1.19.5"
watchdog = "^1.0.2"
vg = "^1.9.0"
sympy = "^1.7.1"
attrs = "^20.3.0"
pydantic = "^1.8.1"
loguru = "^0.5.3"
typer = {version = "^0.3.2", extras = ["all"]}
psutil = "^5.8.0"

[tool.poetry.dev-dependencies]
autoflake = "^1.4"
flake8 = "^3.7"
isort = "^5.7.0"
rope = "^0.18.0"
mypy = "^0.800"
pytest = "^6.2.2"
pytest-cov = "^2.11.1"
pytest-mock = "^3.5.1"
pytest-testmon = "^1.0"
pytest-watch = "^4.2"
pytest-xdist = "^1.30"
docformatter = "^1.4"
pre-commit = "^2.10.0"
pytest-sugar = "^0.9.4"
"fake-bpy-module-2.91" = "^20201216"
snapshottest = "^0.6.0"
sh = "^1.14.1"
pdbpp = "^0.10.2"
ipython = "^7.22.0"
jedi = "<0.18.0"
devtools = {version = "^0.6.1", extras = ["pygments"]}
codetiming = "^1.3.0"
hypothesis = {version = "^6.13.1", extras = ["cli", "codemods"]}
argh = "^0.26.2"


[tool.poetry.extras]
docs = ["sphinx", "sphinx-autodoc-typehints", "recommonmark", "sphinx_rtd_theme"]


[tool.poetry.scripts]
3dframe = 'threedframe.cli:app'


[tool.dephell.main]
from = { format = "poetry", path = "pyproject.toml" }
to = { format = "setuppy", path = "setup.py" }

[tool.black]
line-length = 100
skip-string-normalization = false
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | dist
    | threedframe/lib
    | tests/snapshots
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.isort]
profile = "black"
src_paths = ["threedframe"]
line_length = 100
honor_noqa = true
length_sort = true
skip_glob = ["threedframe/lib/**/*", "tests/snapshots/**/*.py"]

[tool.pytest.ini_options]
collect_ignore = ['setup.py']
testpaths = "tests"
addopts = "-ra -vv"

[tool.converage.run]
source = "threedframe"

[build-system]
requires = ["setuptools>=30.3.0,<50","poetry>=1.0.0"]
build-backend = "poetry.masonry.api"
