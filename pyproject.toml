[tool.poetry]
name = "threedframe"
version = "0.1.0"
description = "Generate printable joints to create a real puzzle from any 3d model."
authors = ["Braden Mars <bradenmars@bradenmars.me>"]
license = "MIT license"
packages = [{ include = "threedframe" }]

readme = "README.md"
homepage = "https://github.com/BradenM/threedframe"
repository = "https://github.com/BradenM/threedframe"

keywords = []
classifiers = [
    'Natural Language :: English',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'License :: OSI Approved :: MIT License',
]

include = [
    "README.md", "LICENSE",
]


[tool.poetry.scripts]
3dframe = 'threedframe.cli:app'

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
# docs extras
# sphinx = { version = "^3.4.3", optional = true }
# sphinx-autodoc-typehints = { version = "^1.11.1", optional = true }
# recommonmark = { version = "^0.7.1", optional = true }
# sphinx_rtd_theme = { version = "^0.5.1", optional = true }
# main
rich = "^12.5.1"
numpy = "^1.19.5"
watchdog = "^1.0.2"
vg = "^1.9.0"
sympy = "^1.7.1"
attrs = "^22.1.0"
pydantic = {version = "^1.9.1", extras = ["dotenv"]}
loguru = "^0.6.0"
typer = {version = "^0.6.1", extras = ["all"]}
psutil = "^5.8.0"
solidpython = {git = "https://github.com/jeff-dh/SolidPython.git", rev = "cddfbe6c1c059c45cb5bf9a4fc94e99771bd5d73"}
ply = "^3.11"
codetiming = "^1.3.0"
euclid3 = "^0.01"
sh = "^1.14.3"
devtools = {version = "^0.9.0", extras = ["pygments"]}
typing-extensions = "^4.3.0"
asyncer = "^0.0.1"
anyio = "^3.6.1"
boltons = "^21.0.0"
tweaker3 = {git = "https://github.com/ChristophSchranz/Tweaker-3.git"}
open3d = {url = "https://storage.googleapis.com/open3d-releases-master/python-wheels/open3d-0.15.2+da98405-cp310-cp310-manylinux_2_27_x86_64.whl"}


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
autoflake = "^1.4"
isort = "^5.7.0"
rope = "^1.2.0"
docformatter = "^1.4"
mypy = {version = "^0.971", extras = ["dmypy"]}
pre-commit = "^2.10.0"
"fake-bpy-module-2.91" = "^20220615"
pdbpp = "^0.10.3"
hypothesis = {version = "^6.13.1", extras = ["cli", "codemods"]}
ipython = "^8.4.0"
black = "^22.6.0"
types-psutil = "^5.9.5"
jedi = "^0.18.1"


[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
pytest-mock = "^3.5.1"
pytest-testmon = "^1.0"
pytest-watch = "^4.2"
pytest-xdist = "^2.5.0"
pytest-sugar = "^0.9.4"
snapshottest = "^0.6.0"


[tool.black]
line-length = 100
skip-string-normalization = false
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | dist
    | threedframe/lib
    | tests/snapshots
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.isort]
profile = "black"
src_paths = ["threedframe"]
line_length = 100
honor_noqa = true
length_sort = true
skip_glob = ["threedframe/lib/**/*", "tests/snapshots/**/*.py"]

[tool.pytest.ini_options]
collect_ignore = ['setup.py']
testpaths = "tests"
addopts = "-ra -vv"

[tool.converage.run]
source = "threedframe"


[tool.pydantic-mypy]
warn-untyped-fields = true

[tool.mypy]
warn_redundant_casts = true
follow_imports = "skip"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
